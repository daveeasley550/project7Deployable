{"version":3,"sources":["People.js","Home.js","Navbar.js","App.js","index.js"],"names":["People","getCurrentSelected","selectedPersonData","setState","currentSelected","pullPeople","people","fetch","then","response","json","data","console","log","state","handleMore","_id","showPeople","handleEditChange","e","personToEdit","target","name","value","displayAllPeople","map","person","className","href","onClick","deletePerson","getEditPerson","birth_year","gender","height","mass","hair_color","eye_color","skin_color","createNewPerson","preventDefault","newPerson","requestOptions","method","mode","headers","body","JSON","stringify","resp","returnedPerson","handleFormChange","id","deleteResp","updatedPeople","filter","bookmarks","updatePerson","updatedPerson","returnedUpdatedPerson","allUpdatedPeople","this","peopleCards","onSubmit","type","placeholder","onChange","Component","Home","props","React","Nav","App","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.273925cf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import { Route, Link } from \"react-router-dom\";\n\nclass People extends Component {\n  constructor() {\n    super();\n    this.state = {\n      people: [],\n      currentSelected:{},\n      personToEdit: {},\n      showPeople: \"\",\n      newPerson:{}\n        \n    };\n  }\n  componentDidMount() {\n    this.pullPeople();\n  }\n  getCurrentSelected=(selectedPersonData)=>{\n    this.setState({currentSelected:selectedPersonData})\n  }\n  pullPeople = (people) => {\n    const peopleUrl = \"https://polar-lake-62924.herokuapp.com/peoples/\";\n    fetch(peopleUrl)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          people: data,\n        });\n        console.log(this.state.people);\n      });\n  };\n  handleMore = (_id) => {\n    this.setState({\n      showPeople: _id,\n    });\n  };\n  handleEditChange=(e)=>{\n    this.setState({personToEdit:{...this.state.personToEdit,[e.target.name]:e.target.value }})\n      }\n  displayAllPeople = (people) => {\n    const peopleCards = people.map((person) => (\n     <div>\n        <a className=\"person-card\" href=\"#handleMore\"\n        onClick={() => {this.handleMore(person._id);this.getCurrentSelected(person.name)}}>{person.name}\n\n{/* <a href=\"#\" onClick={() => { func1(); func2();}}>Test Link</a> */}\n        \n        </a>\n      {this.state.showPeople==person._id?\n      <div>\n          <button className=\"button\" onClick={() => {this.deletePerson(person._id)}}>Delete</button>\n          <button className=\"button\" onClick={() => {this.getEditPerson(person)}}>Edit</button>\n           \n           <h5>Birth Year: {person.birth_year}</h5>\n           <h5>Gender: {person.gender}</h5>    \n           <h5>Height: {person.height}cm</h5>\n           <h5>Mass: {person.mass}kg</h5>\n           <h5>Hair Color: {person.hair_color}</h5>\n           <h5>Eye Color: {person.eye_color}</h5>\n           <h5>Skin Color: {person.skin_color}</h5>\n      </div>:\n       null}\n      </div>\n    ));\n    return peopleCards; \n  };\n  createNewPerson = (e) => {\n    e.preventDefault()\n    const newPerson = this.state.newPerson\n    const requestOptions = {\n      method: \"POST\",\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPerson)\n    }\n    fetch(\"https://polar-lake-62924.herokuapp.com/peoples/\", requestOptions)\n    .then(resp=>resp.json())\n    .then(returnedPerson=>{\n      console.log(returnedPerson)\n      this.setState({people: [...this.state.people, returnedPerson]})\n    })\n  }\n  handleFormChange =(e)=>{\n    // console.log(e.target.name, e.target.value)\n    this.setState({newPerson:{...this.state.newPerson, [e.target.name]:e.target.value}})\n  }\n  deletePerson=(id)=>{\n    console.log(\"delete me:\",id)\n    fetch(\"https://polar-lake-62924.herokuapp.com/peoples/\"+id,{method: \"DELETE\"})\n    .then(resp=>resp.json())\n    .then(deleteResp=>{\n    const updatedPeople = this.state.people.filter(person=>person._id!=id)\n    this.setState({currentSelected:{}, bookmarks: updatedPeople})\n    })\n      }\n      //   getPersonToDelete = (id) => {\n        //     const allPeople = [...this.state.people];\n        //     const peopleAfterDelete = allPeople.filter((person) => person.id !== id);\n        //     console.log(peopleAfterDelete)\n            \n           \n        //     this.setState({ people: peopleAfterDelete, personToEdit: {} });\n        //     console.log(\"deleting\")\n        //   };\n      updatePerson = (e) =>{\n        e.preventDefault()\n        const{name,birth_year,eye_color,gender,hair_color,height,mass,skin_color,_id} =this.state.personToEdit\n        const updatedPerson = {name,birth_year,eye_color,gender,hair_color,height,mass,skin_color}\n        console.log(updatedPerson,_id)\n        const requestOptions = {\n          method: \"PUT\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedPerson)\n        }\n        fetch(\"https://polar-lake-62924.herokuapp.com/peoples/\"+_id, requestOptions)\n          .then(resp => resp.json())\n          .then(returnedUpdatedPerson => {\n            console.log(returnedUpdatedPerson)\n            const allUpdatedPeople = this.state.people.map(person=>person._id ===_id ? returnedUpdatedPerson : person)\n            this.setState({people: allUpdatedPeople, currentSelected:{}, personToEdit:{}})\n          })\n      }\n      getEditPerson = (personToEdit) => {\n        this.setState({personToEdit})\n      }\n//   getPersonToEdit = (thePerson) => {\n//     console.log(\"edit\",)\n//     this.setState({ personToEdit: thePerson });\n//   };\n\n\n  render() {\n    //   console.log(this.state.personToEdit)\n    // const people = this.state.people.map((person) => {\n    const peopleCards = this.displayAllPeople(this.state.people);\n    return (\n      <div>\n        <h1>StarWars People</h1>\n        \n        <h2>Create Your Own Character</h2>\n        <form onSubmit={this.createNewPerson}>\n          <input type=\"text\" name=\"name\" placeholder=\"Enter name\" value={this.state.newPerson.name} onChange={this.handleFormChange} />\n          <input type=\"text\" name=\"birth_year\" placeholder=\"Enter Birth Year\" value={this.state.newPerson.birth_year} onChange={this.handleFormChange} />\n          <input type=\"text\" name=\"gender\" placeholder=\"Enter Gender\" value={this.state.newPerson.gender} onChange={this.handleFormChange} />\n          <input type=\"text\" name=\"height\" placeholder=\"Enter Height\" value={this.state.newPerson.height} onChange={this.handleFormChange} />\n          <input type=\"text\" name=\"mass\" placeholder=\"Enter Weight\" value={this.state.newPerson.mass} onChange={this.handleFormChange} />\n          <input type=\"text\" name=\"hair_color\" placeholder=\"Enter Hair Color\" value={this.state.newPerson.hair_color} onChange={this.handleFormChange} />\n          <input type=\"text\" name=\"eye_color\" placeholder=\"Enter Eye Color\" value={this.state.newPerson.eye_color} onChange={this.handleFormChange} />\n          <input type=\"text\" name=\"skin_color\" placeholder=\"Enter Skin Color\" value={this.state.newPerson.skin_color} onChange={this.handleFormChange} />\n          <button type=\"submit\">Create Character</button>\n        </form>\n        {peopleCards}\n        {/* {this.state.people.map(person => <div onClick={() => this.getCurrentSelected(person)} key={person._id}>{person.name}</div>)} */}\n        <h2>Update Character</h2>\n        {this.state.personToEdit._id && \n        <form onSubmit={this.updatePerson}>\n          <input type=\"text\" name=\"name\" placeholder=\"Enter name\" value={this.state.personToEdit.name} onChange={this.handleEditChange} />\n          <input type=\"text\" name=\"birth_year\" placeholder=\"Enter Birth Year\" value={this.state.personToEdit.birth_year} onChange={this.handleEditChange} />\n          <input type=\"text\" name=\"gender\" placeholder=\"Enter Gender\" value={this.state.personToEdit.gender} onChange={this.handleEditChange} />\n          <input type=\"text\" name=\"height\" placeholder=\"Enter Height\" value={this.state.personToEdit.height} onChange={this.handleEditChange} />\n          <input type=\"text\" name=\"mass\" placeholder=\"Enter Weight\" value={this.state.personToEdit.mass} onChange={this.handleEditChange} />\n          <input type=\"text\" name=\"hair_color\" placeholder=\"Enter Hair Color\" value={this.state.personToEdit.hair_color} onChange={this.handleEditChange} />\n          <input type=\"text\" name=\"eye_color\" placeholder=\"Enter Eye Color\" value={this.state.personToEdit.eye_color} onChange={this.handleEditChange} />\n          <input type=\"text\" name=\"skin_color\" placeholder=\"Enter Skin Color\" value={this.state.personToEdit.skin_color} onChange={this.handleEditChange} />\n          <button type=\"submit\">Edit Character</button>\n        </form>}\n      </div>\n    );\n    {\n      /* return <div>{people}</div>; */\n    }\n  }\n}\n\nexport default People;\n","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super()\n        this.state = {\n            // yourState: []\n        }\n    }\n   \n    // componentDidMount() {\n    //     //wll run immmediately after render processes (including all mounting for child components) is complete\n    //     let newData = []\n    //     this.setState({ yourState: newData })\n    // }\n    // componentDidUpdate() {\n    //     //will only run if a component is React detects a change in the state for this component or props from parent\n    // }\n    // componentWillUnmount() {\n    //     //will only run if a component is about to be removed from the dom by React\n    // }\n    render() {\n        return (\n            <div>\n            <div className=\"home-words\">\n               <h1>A LONG TIME AGO IN A GALAXY FAR AWAY...</h1>\n               <h2>THERE WAS A DUDE...HE WAS A NERD</h2>\n               <h3>AND HE LIKED CODING</h3>\n               <h4>SO HE MADE AN API</h4>\n               <h5>THIS API!!!!</h5>\n               <h6>CLICK PEOPLE IN THE NAV</h6>\n            </div>\n            <div className=\"star\">\n            <h1>STARWARS!!!!</h1>\n            </div>\n            </div>\n\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nexport default class Nav extends React.Component {\n  \n    render() {\n    return (\n      <header>\n        <a href={\"/\"}>Home</a>\n        <a href={\"/people\"}>People</a>\n      </header>\n    );\n  }\n}\n","import './App.css';\nimport React, { Component } from \"react\";\nimport \"./People\"\nimport People from './People';\nimport Home from \"./Home\"\nimport { Route, Switch } from \"react-router-dom\";\nimport Nav from \"./Navbar\"\nimport Edit from \"./Edit\"\n\n\nclass App extends Component {\n  \n  \n  render() {\n    return (\n      <div>\n        <Nav/>\n      <div className=\"App\">\n        <div className=\"title\">\n       <Switch>\n            <Route exact path=\"/people\" render= {()=><People/>}/>\n            <Route exact path=\"/\" render= {()=><Home/>}/>\n            {/* <Route exact path=\"/edit\" render= {()=><Edit/>}/> */}\n\n       </Switch>\n      \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\" \n\nReactDOM.render(\n  <Router>\n    <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}